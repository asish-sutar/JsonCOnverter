[
	{
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the value of myCharacter after line 3 is run?",
    "question_key": 111,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "e",
    "w_options": "p\nr\ni",
    "options_content_type": "TEXT",
    "code_data": "1: public class Main {\n2:   public static void main (String[] args) {\n3:     char myCharacter = \"piper\".charAt(3);\n4:   }\n5: }",
    "code_language": "JAVA",
    "explanation": "In java, charAt() takes a interger type index and returns character value w.r.t index. Index is always starts with zero. In this code,index value of e is 3 so the output is e.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 112,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": 3,
    "w_options": "5\n8\n1",
    "options_content_type": "TEXT",
    "code_data": "public class Main {\n  public static void main (String[] args) {\n    int[] a= {8, 5, 3, 1};\n    System.out.println(a[2]);\n  }\n}",
    "code_language": "JAVA",
    "explanation": "Array index is always starts with 0. in this code snippet, a[0] is 8, a[1] is 5, a[2] is 3. So the output is 3.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which change will make this code compile successfully?",
    "question_key": 113,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Remove the body of the print method.",
    "w_options": "Change line 2 to public static final String message\nChange line 6 to public void print2(){}\nRemove the body of the print2 method and add a semicolon.",
    "options_content_type": "TEXT",
    "code_data": "1: public class Main {\n2:   String MESSAGE =\"Hello!\";\n3:   static void print(){\n4:     System.out.println(message);\n5:   }\n6:   void print2(){}\n7: }",
    "code_language": "JAVA",
    "explanation": "Changing line 2 to public static final String message raises the error message not initialized in the default constructor.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 114,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "truetrue",
    "w_options": "falsetrue\ntruefalse\nfalsefalse",
    "options_content_type": "TEXT",
    "code_data": "import java.util.*;\nclass Main {\n  public static void main(String[] args) {\n    String[] array = new String[]{\"A\", \"B\", \"C\"};\n    List<String> list1 = Arrays.asList(array);\n    List<String> list2 = new ArrayList<>(Arrays.asList(array));\n    List<String> list3 = new ArrayList<>(Arrays.asList(\"A\", new String(\"B\"), \"C\"));\n    System.out.print(list1.equals(list2));\n    System.out.print(list1.equals(list3));\n  }\n}",
    "code_language": "JAVA",
    "explanation": "The `equals()` method in Java is typically used to compare objects. By default, it checks object addresses, but if overridden, it compares based on object properties. In the `String` class, the `equals()` method is already overridden to compare string content rather than memory addresses. The code outputs \"truetrue\" because `list1.equals(list2)` and `list1.equals(list3)` both return `true`. Both comparisons are true because `list1` and `list2` share the same elements from the array, and even though `list1` and `list3` contain the same elements, `list3` is a separate object created using individual string elements.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 115,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Hello World!",
    "w_options": "It will not compile.\nhello\nThe code effectively converts the initial \"hello\" into \"HelloWorld!\" by deleting the first character, inserting \"H\" at the beginning, and appending \" World!\" to the end.",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n  public static void main(String[] args) {\n    StringBuilder sb = new StringBuilder(\"hello\");\n    sb.deleteCharAt(0).insert(0, \"H\").append(\" World!\");\n    System.out.println(sb);\n  }\n}",
    "code_language": "JAVA",
    "explanation": "The code effectively converts the initial \"hello\" into \"Hello World!\" by deleting the first character, inserting \"H\" at the beginning, and appending \" World!\" to the end. The output of this code is: \"Hello World!\"",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "How would you use the TaxCalculator to determine the amount of tax on $50?",
    "question_key": 116,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "TaxCalculator.calculate(50);",
    "w_options": "new TaxCalculator.calculate(50);\ncalculate(50);\nnew TaxCalculator.calculate($50);",
    "options_content_type": "TEXT",
    "code_data": "class TaxCalculator {\n  static calculate(total) {\n    return total * .05;\n  }\n}",
    "code_language": "JAVA",
    "explanation": "This method call refers to the static method calculate within the TaxCalculator class and passes 50 as an argument. The method multiplies the total by 0.05 (5%) and returns the calculated tax amount.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output?",
    "question_key": 117,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "1 2 3 4",
    "w_options": "1 3 2 4\n4 2 3 1\n4 3 2 1",
    "options_content_type": "TEXT",
    "code_data": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args)\n    {\n        PriorityQueue<Integer> queue = new PriorityQueue<>();\n        queue.add(4);\n        queue.add(3);\n        queue.add(2);\n        queue.add(1);\n\n        while (queue.isEmpty() == false) {\n            System.out.printf(\"%d\", queue.remove());\n        }\n    }\n}",
    "code_language": "JAVA",
    "explanation": "Queues typically operate on a \"first in, first out\" (FIFO) basis, while PriorityQueue is a subclass of the Queue interface that can sort elements in ascending or descending order. In this code, we add four numbers to the queue, indicating that the queue is not empty. When the while loop executes, it checks whether the queue is empty. Since the queue is not empty in our case, it returns false. When false is compared to false, the condition evaluates to true. Consequently, the elements are returned in sorted order.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will this code print, assuming it is inside the main method of a class?",
    "question_key": 118,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "hello",
    "w_options": "my\nhellomyfriends\nfriends",
    "options_content_type": "TEXT",
    "code_data": "System.out.println(\"hello my friends\".split(\" \")[0]);",
    "code_language": "JAVA",
    "explanation": "It uses the split(\" \") method on the string `hello my friends`, dividing it into separate elements at the spaces. The [0] index then specifically refers to the first element, which is hello.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "This code does not compile. What needs to be changed so that it does?",
    "question_key": 119,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Add a constructor that accepts a String parameter and assigns it to the field shortCode.",
    "w_options": "Remove the final keyword for the field shortCode.\nAll enums need to be defined on a single line of code.\nAdd a setter method for the field shortCode.",
    "options_content_type": "TEXT",
    "code_data": "public enum Direction {\n    EAST(\"E\"),\n    WEST(\"W\"),\n    NORTH(\"N\"),\n    SOUTH(\"S\");\n\n    private final String shortCode;\n\n    public String getShortCode() {\n        return shortCode;\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The code needs a constructor in the Direction enum that assigns the shortCode field. The provided code lacked a constructor to initialize the final field shortCode. By adding a constructor that accepts a String parameter and assigns it to the field, the code will compile successfully.\nExample:\n Direction(String shortCode) {\r\n        this.shortCode = shortCode;\r\n }",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What code should go in line 3?",
    "question_key": 120,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "int[][] array = new int[3][3];",
    "w_options": "int[][] array = new int[][];\nint[][] array = new int[2][2];\nint[][] array = [][];",
    "options_content_type": "TEXT",
    "code_data": "1: class Main {\n2:     public static void main(String[] args) {\n3:\n4:         array[0] = new int[]{1, 2, 3};\n5:         array[1] = new int[]{4, 5, 6};\n6:         array[2] = new int[]{7, 8, 9};\n7:         for (int i = 0; i < 3; i++)\n8:             System.out.print(array[i][1]); //prints 258\n9:     }\n10: }",
    "code_language": "JAVA",
    "explanation": "int[][] array = new int[3][3]; is correct for line 3 as it creates a 2D array with 3 rows and 3 columns",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Is this an example of method overloading or overriding?",
    "question_key": 121,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "both",
    "w_options": "neither\noverloading\noverriding",
    "options_content_type": "TEXT",
    "code_data": "class Car {\n    public void accelerate() {}\n}\nclass Lambo extends Car {\n    public void accelerate(int speedLimit) {}\n    public void accelerate() {}\n}",
    "code_language": "JAVA",
    "explanation": "The provided Java code illustrates both method overloading and method overriding.\nMethod Overloading: This happens in the 'Lambo' class with two accelerate methods having the same name but different parameters.\nMethod Overriding: The accelerate method in the 'Lambo' class without parameters overrides the 'accelerate' method from the 'Car' class.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be printed?",
    "question_key": 122,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "strawberry",
    "w_options": "raspberry\nblueberry\nrasp",
    "options_content_type": "TEXT",
    "code_data": "public class Berries{\n\n    String berry = \"blue\";\n\n    public static void main(String[] args) {\n        new Berries().juicy(\"straw\");\n    }\n    void juicy(String berry){\n        this.berry = \"rasp\";\n        System.out.println(berry + \"berry\");\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The juicy method changes the local variable berry to \"rasp\" and prints the argument \"straw\" concatenated with the local variable berry. However, it doesn't affect the class variable berry which remains \"blue\".",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the value of forestCount after this code executes?",
    "question_key": 123,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": 3,
    "w_options": "4\n2\nWhen calling the put method, Java will throw an exception",
    "options_content_type": "TEXT",
    "code_data": "Map<String, Integer> forestSpecies = new HashMap<>();\n\nforestSpecies.put(\"Amazon\", 30000);\nforestSpecies.put(\"Congo\", 10000);\nforestSpecies.put(\"Daintree\", 15000);\nforestSpecies.put(\"Amazon\", 40000);\n\nint forestCount = forestSpecies.size();",
    "code_language": "JAVA",
    "explanation": "The value of `forestCount` after this code executes is 3. This is because in a Map, keys must be unique, and the second insertion for `\"Amazon\"` will replace the existing entry rather than create a new one. Thus, only three distinct keys are in the map, resulting in `forestCount` being 3.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the problem with this code?",
    "question_key": 124,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Modifying a collection while iterating through it can throw a ConcurrentModificationException.",
    "w_options": "The List interface does not allow an argument of type String to be passed to the remove method.\nArrayList does not implement the List interface.\nString should be compared using == method instead of equals.",
    "options_content_type": "TEXT",
    "code_data": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nclass Main {\n    public static void main(String[] args) {\n        List<String> list = new ArrayList<String>(Arrays.asList(\"a\", \"b\", \"c\"));\n        for(String value :list) {\n            if(value.equals(\"a\")) {\n                list.remove(value);\n            }\n        }\n        System.out.println(list); // outputs [b,c]\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The main problem with this code is that modifying a collection while iterating through it can throw a ConcurrentModificationException. The code is attempting to remove an element from the list while iterating, which can cause this exception to be thrown.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "How do you convert this method into a lambda expression?",
    "question_key": 125,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Function<Integer, Integer> squareLambda = x -> x * x;",
    "w_options": "Function<Integer, Integer> squareLambda = (int x) -> { x * x };\nFunction<Integer, Integer> squareLambda = () -> { return x * x };\nFunction<Integer, Integer> squareLambda = x -> return x * x;",
    "options_content_type": "TEXT",
    "code_data": "public int square(int x) {\n    return x * x;\n}",
    "code_language": "JAVA",
    "explanation": "To convert the given method into a lambda expression in Java, use the correct syntax: Function<Integer, Integer> squareLambda = x -> x * x;. This lambda expression takes an integer input and returns its square. The other options have syntax errors or missing parameters. The original method simply squares an integer input.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the result of this program?",
    "question_key": 126,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "An error will occur when compiling.",
    "w_options": "10\n20\nnull",
    "options_content_type": "TEXT",
    "code_data": "interface Foo {\n    int x = 10;\n}\n\npublic class Main{\n\n    public static void main(String[] args) {\n        Foo.x = 20;\n        System.out.println(Foo.x);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The code will result in an error during compilation. The interface variables are implicitly final and cannot be reassigned, leading to a compilation error.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which statement must be inserted on line 1 to print the value true?",
    "question_key": 127,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "String val = \"Sam\";",
    "w_options": "Integer val = 15;\nString val = null;\nOptional<String> val = Optional.empty();",
    "options_content_type": "TEXT",
    "code_data": "1:\n2: Optional<String> opt = Optional.of(val);\n3: System.out.println(opt.isPresent());",
    "code_language": "JAVA",
    "explanation": "Using the line String val = \"Sam\"; sets a non-null value \"Sam\" to the variable 'val', guaranteeing that System.out.println(opt.isPresent()); will display `true`.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will this code print, assuming it is inside the main method of a class?",
    "question_key": 128,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "true false",
    "w_options": "false true\ntrue true\nfalse false",
    "options_content_type": "TEXT",
    "code_data": "System.out.println(true && false || true);\nSystem.out.println(false || false && true);",
    "code_language": "JAVA",
    "explanation": "System.out.println(true && false || true); - Evaluates to true.\r\nSystem.out.println(false || false && true); - Evaluates to false.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will this code print?",
    "question_key": 129,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "[One, Two, Three]",
    "w_options": "[Two]\n[One, Three]\nTwo",
    "options_content_type": "TEXT",
    "code_data": "List<String> list1 = new ArrayList<>();\nlist1.add(\"One\");\nlist1.add(\"Two\");\nlist1.add(\"Three\");\n\nList<String> list2 = new ArrayList<>();\nlist2.add(\"Two\");\n\nlist1.remove(list2);\nSystem.out.println(list1);",
    "code_language": "JAVA",
    "explanation": "The code creates two lists, list1 and list2. It adds One, Two, and Three to list1, and Two to list2. Then, it attempts to remove the elements of list2 from list1. However, the remove() method does not remove elements based on the content of another list; it removes the first occurrence of the specified element. Since Two is in list1 and is also present in list2, the remove() method will eliminate the first occurrence of Two in list1, but the list will still retain Two and the output will be [One, Two, Three].",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which keyword would not be allowed here?",
    "question_key": 130,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "static",
    "w_options": "protected\npublic\nvoid",
    "options_content_type": "TEXT",
    "code_data": "class Unicorn {\n    _____ Unicorn(){}\n}",
    "code_language": "JAVA",
    "explanation": "The keyword \"static\" would not be allowed in this constructor definition. Static cannot be used with constructors.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which OOP concept is this code an example of?",
    "question_key": 131,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "polymorphism",
    "w_options": "composition\ngenerics\nencapsulation",
    "options_content_type": "TEXT",
    "code_data": "List[] myLists = {\n    new ArrayList<>(),\n    new LinkedList<>(),\n    new Stack<>(),\n    new Vector<>(),\n};\n\nfor (List list : myLists){\n    list.clear();\n}",
    "code_language": "JAVA",
    "explanation": "This code is an example of polymorphism in object-oriented programming, as it demonstrates the ability to use a common interface or base class (in this case, the \"List\" interface) to work with various subclasses (ArrayList, LinkedList, Stack, and Vector) through a loop, making the code more flexible and extensible.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What does this code print?",
    "question_key": 132,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "false false",
    "w_options": "true false\nfalse true\ntrue true",
    "options_content_type": "TEXT",
    "code_data": "String a = \"racecar\";\nString b = new String(\"racecar\");\nString c = new String(\"racecar\");\n\nSystem.out.println(a == b);\nSystem.out.println(b == c);",
    "code_language": "JAVA",
    "explanation": "In java, we can create string object in 2 ways i.e string literals and by using new keywords. when we create string object using string literals then object is created inside SCP memory. when we create object using new keyword then object is created inside heap memory. In this program string a object is created inside scp memory and string b and string c object is created inside heap memory. when we try to compare a with b it will give false value because == operator compares object address. when we try to compare b object with c object then it will give false value because both object address is different.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": " Which is a valid type for this lambda function?",
    "question_key": 133,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Function<Integer, String>",
    "w_options": "Function<Integer, Boolean>\nFunction<String>\nFunction<Integer>",
    "options_content_type": "TEXT",
    "code_data": "_____ EvenOrOdd = x -> {\n    return x % 2 == 0 ? \"even\" : \"odd\";\n};",
    "code_language": "JAVA",
    "explanation": "For the given lambda function, the valid type is Function<Integer, String>. This lambda function checks if a given integer is even or odd and returns a string accordingly, representing the result.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is displayed when this code is compiled and executed?",
    "question_key": 134,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": 7,
    "w_options": "6\n3\n4",
    "options_content_type": "TEXT",
    "code_data": "import java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashMap<String, Integer> pantry = new HashMap<>();\n\n        pantry.put(\"Apples\", 3);\n        pantry.put(\"Oranges\", 2);\n\n        int currentApples = pantry.get(\"Apples\");\n        pantry.put(\"Apples\", currentApples + 4);\n\n        System.out.println(pantry.get(\"Apples\"));\n    }\n}",
    "code_language": "JAVA",
    "explanation": "In this code, a HashMap, which organizes objects as key-value pairs, is created. Using the `pantry` reference, 3 apples and 2 oranges are added. Retrieving the number of apples (stored in `currentApples` as 3), we then increment it by 4, resulting in a total of 7 apples. The final output of the code is `7`.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What variable type should be declared for capitalization?",
    "question_key": 135,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Function<String, String>",
    "w_options": "Stream<String>\nString<String, String>\nMap<String, String>",
    "options_content_type": "TEXT",
    "code_data": "List<String> songTitles = Arrays.asList(\"humble\", \"element\", \"dna\");\n_______ capitalize = (str) -> str.toUpperCase();\nsongTitles.stream().map(capitalize).forEach(System.out::println);",
    "code_language": "JAVA",
    "explanation": "The variable type for capitalization in this context should be `Function<String, String>` because it represents a function that takes a String as input and returns a String. It is used to convert the song titles to uppercase using the `map` operation in the Stream.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which is the correct return type for the processFunction method?",
    "question_key": 136,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "String",
    "w_options": "Integer\nConsumer\nFunction<Integer, String>",
    "options_content_type": "TEXT",
    "code_data": "_____ processFunction(Integer number, Function<Integer, String> lambda) {\n    return lambda.apply(number);\n}",
    "code_language": "JAVA",
    "explanation": "The return type for the processFunction method should be String. The processFunction method takes an Integer and a Function<Integer, String> as parameters, applying the function lambda to the provided number. The function's output is then returned, which is of type String.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What function could you use to replace slashes for dashes in a list of dates?",
    "question_key": 137,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "UnaryOperator<String> replaceSlashes = date -> date.replace(\"/\", \"-\");",
    "w_options": "Function<String, String> replaceSlashes = dates -> dates.replace(\"-\", \"/\");\nMap<String, String> replaceSlashes = dates.replace(\"/\", \"-\");\nConsumer<Date> replaceSlashes = date -> date.replace(\"/\", \"-\");",
    "options_content_type": "TEXT",
    "code_data": "List<String> dates = new ArrayList<String>();\n// missing code\ndates.replaceAll(replaceSlashes);",
    "code_language": "JAVA",
    "explanation": "replaceAll method for any List only accepts UnaryOperator to pass every single element into it then put the result into the List again.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "How do you create and run a Thread for this class?",
    "question_key": 138,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Thread thread = new Thread(new CurrentDateRunnable()); thread.start();",
    "w_options": "new Thread(new CurrentDateRunnable()).join();\nnew CurrentDateRunnable().run();\nnew CurrentDateRunnable().start();",
    "options_content_type": "TEXT",
    "code_data": "import java.util.date;\n\npublic class CurrentDateRunnable implements Runnable {\n    @Override\n    public void run () {\n        while (true) {\n            System.out.println(\"Current date: \" + new Date());\n\n            try {\n                Thread.sleep(5000);\n            } catch (InterruptedException e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n}",
    "code_language": "JAVA",
    "explanation": "To create and run a thread for a class implementing Runnable, use Thread thread = new Thread(new CurrentDateRunnable()); thread.start();. This creates a new thread and starts its execution, running the run method of CurrentDateRunnable.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "The compiler is complaining about this assignment of the variable pickle to the variable jar. How would you fix this?",
    "question_key": 139,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Cast pickle to an int before assigning it to the jar.",
    "w_options": "Use the method toInt() to convert the pickle before assigning it to the jar.\nMake pickle into a double by adding + \".0\"\nUse the new keyword to create a new Integer from pickle before assigning it to the jar.",
    "options_content_type": "TEXT",
    "code_data": "double pickle = 2;\nint jar = pickle;",
    "code_language": "JAVA",
    "explanation": "Use explicit casting (int) to convert the double variable pickle to an int before assigning it to the int variable jar.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What value should x have to make this loop execute 10 times?",
    "question_key": 140,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": 3,
    "w_options": "10\n1\n0",
    "options_content_type": "TEXT",
    "code_data": "for(int i=0; i<30; i+=x) {}",
    "code_language": "JAVA",
    "explanation": "For the loop to execute 10 times, the value of \\( x \\) should be 3. This would result in the loop incrementing \\( i \\) by 3 in each iteration (\\( i+=x \\)), causing the loop to execute 10 times as \\( 30 \\div 3 = 10 \\).",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What values for x and y will cause this code to print \"btc\"?",
    "question_key": 141,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "int x = 0; int y = 2;",
    "w_options": "int x = 1; int y = 3;\nint x = 0; int y = 3;\nint x = 1; int y = 3;",
    "options_content_type": "TEXT",
    "code_data": "String buy = \"bitcoin\";\nSystem.out.println(buy.substring(x, x+1) + buy.substring(y, y+2))",
    "code_language": "JAVA",
    "explanation": "The code extracts substrings from the \"buy\" string (which is \"bitcoin\") using the substring method. It retrieves specific parts of the string according to the provided indices. In this case, x = 0 fetches the \"b\" from the string, and y = 2 retrieves \"tc\" (starting at index 2, and a length of 2). When concatenated, \"btc\" is the output.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which keyword would you add to make this method the entry point of the program?",
    "question_key": 142,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "static",
    "w_options": "exception\nargs\nString",
    "options_content_type": "TEXT",
    "code_data": "public class Main {\n    public static void main(String[] args) {\n        // Your program logic here\n    }\n}",
    "code_language": "JAVA",
    "explanation": "static keyword Indicates that the method belongs to the class itself and not to any specific instance of the class. It allows the method to be called without instantiating the class.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "You have a list of Bunny objects that you want to sort by weight using Collections.sort. What modification would you make to the Bunny class?",
    "question_key": 143,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Implement the Comparable interface by overriding the compareTo method.",
    "w_options": "Add the keyword default to the weight variable.\nOverride the equals method inside the Bunny class.\nImplement Sortable and override the sortBy method.",
    "options_content_type": "TEXT",
    "code_data": "//This is how the original bunny class looks\nclass Bunny{\n    String name;\n    int weight;\n\n    Bunny(String name){\n        this.name = name;\n    }\n    public static void main(String args[]){\n        Bunny bunny = new Bunny(\"Bunny 1\");\n    }\n}",
    "code_language": "JAVA",
    "explanation": "To sort objects based on a property like weight, we can use the `Comparable` interface in Java. It requires implementing the `compareTo` method to compare objects. The `Collections` class in the collection framework provides the `sort` method, which you can use to sort elements in ascending or descending order.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 144,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "cotton leather I don't gotta buy gifts for nobody!",
    "w_options": "cotton\ncotton leather\ncotton I don't gotta buy gifts for nobody!",
    "options_content_type": "TEXT",
    "code_data": "int yearsMarried = 2;\nswitch (yearsMarried) {\n   case 1:\n      System.out.println(\"paper\");\n   case 2:\n      System.out.println(\"cotton\");\n   case 3:\n      System.out.println(\"leather\");\n   default:\n      System.out.println(\"I don't gotta buy gifts for nobody!\");\n}",
    "code_language": "JAVA",
    "explanation": "In this code, the variable `yearsMarried` is set to 2. The switch statement is entered based on the condition being met. As the condition is met, it delves into the switch block. The case 2 matches and prints \"cotton\". However, due to the absence of break statements, it flows into case 3, printing \"leather\". Ultimately, it reaches the default block, printing \"I don't gotta buy gifts for nobody!\" since there are no breaks to stop the fall-through behavior.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What happens when this code is run?",
    "question_key": 145,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "An IndexOutOfBoundsException will be thrown.",
    "w_options": "\"Sea Biscuit\" will be printed.\n\" Sea Biscuit \" will be printed.\nA NullPointerException will be thrown.",
    "options_content_type": "TEXT",
    "code_data": "List<String> horses = new ArrayList<String>();\nhorses.add (\" Sea Biscuit \");\nSystem.out.println(horses.get(1).trim());",
    "code_language": "JAVA",
    "explanation": "List<String> horses = new ArrayList<String>(); creates a new ArrayList named horses. horses.add(\" Sea Biscuit \"); adds a single element to the list at index 0. System.out.println(horses.get(1).trim()); attempts to retrieve the element at index 1, but there is no element at index 1. It will cause an IndexOutOfBoundsException because the list only has one element at index 0 (the element added by horses.add()).",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will print when Lambo is instantiated?",
    "question_key": 146,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": " blue white white",
    "w_options": "blue white blue\nwhite white white\nwhite white blue",
    "options_content_type": "TEXT",
    "code_data": "class Car {\n    String color = \"blue\";\n}\n\nclass Lambo extends Car {\n    String color = \"white\";\n\n    public Lambo() {\n        System.out.println(super.color);\n        System.out.println(this.color);\n        System.out.println(color);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "In this code, there exists a class named Car, containing a single property - 'color,' initially set to blue. Another class, Lambo, extends the Car class. The Lambo class holds one data member along with a default constructor. The first line of this constructor invokes `super.color`, resulting in an output of blue. Subsequently, the second line will print white, and the third line will also display white.\nNote: super keyword is used to call super class property and this keyword is used to point current object.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following Java program?",
    "question_key": 147,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Compilation Error",
    "w_options": "Runtime Error\n5 6 5 6\n5 6 5",
    "options_content_type": "TEXT",
    "code_data": "class variable_scope {\n    public static void main(String args[]) {\n        int x;\n        x = 5;\n        {\n            int y = 6;\n            System.out.print(x + \" \" + y);\n        }\n        System.out.println(x + \" \" + y);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The variable x is declared outside of the inner block, making it accessible throughout the main method.\nThe variable y is declared within a nested block, limiting its scope to that block only.\nWhen trying to print x + \" \" + y outside the nested block, a compilation error occurs because y is not in scope at that point.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Calculate the time complexity of the following program.",
    "question_key": 148,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "O(AB)",
    "w_options": "O(N*N)\nO(1)\nO(A*B)",
    "options_content_type": "TEXT",
    "code_data": " void printUnorderedPairs(int[] arrayA, int[] arrayB){\n    for(int i = 0; i < arrayA.length; i++){\n        for(int  j = 0; j < arrayB.length; j++){\n            if(arrayA[i] < arrayB[j]){\n                System.out.println(arrayA[i] + \",\" + arrayB[j]);\n            }\n        }\n    }\n }",
    "code_language": "JAVA",
    "explanation": "The time complexity of this code is O(AB), where A represents the length of arrayA and B represents the length of arrayB. For each element in arrayA, the code iterates through every element in arrayB, resulting in a time complexity that is the product of the lengths of the two arrays. This complexity arises from the nested loops, as the code compares every element in arrayA with every element in arrayB. So, the time complexity of this code is O(AB).",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What do these expressions evaluate?",
    "question_key": 149,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": " 1. false 2. true",
    "w_options": "1. false 2. false\n1. true 2. false\n1. true 2. true",
    "options_content_type": "TEXT",
    "code_data": "1. true && false\n2. true && false || true",
    "code_language": "JAVA",
    "explanation": "false as true && false results in false.\ntrue as true && false || true will be evaluated as false || true, which results in true.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": " Calculate the space complexity of the following program.",
    "question_key": 150,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "O(N)",
    "w_options": "O(1)\nO(N^2)\nO(log(N)",
    "options_content_type": "TEXT",
    "code_data": "void createArray(int n) {\n    int[] arr = new int[n];\n    for (int i = 0; i < n; i++) {\n        arr[i] = i * 2;\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The space complexity of the given program is O(N), where N is the size of the array `arr`. The program creates an integer array of size `n`, so the space required is directly proportional to `n`, resulting in O(N) space complexity.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following Java code?",
    "question_key": 151,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Hello",
    "w_options": "H\nRuntime Error\nCompilation Error",
    "options_content_type": "TEXT",
    "code_data": "import java.util.*;\nclass genericstack <E>{\n    Stack <E> stk = new Stack <E>();\n    public void push(E obj){\n        stk.push(obj);\n    }\n    public E pop(){\n        E obj = stk.pop();\n        return obj;\n    }\n}\npublic class Main{\n    public static void main(String args[]){\n        genericstack <String> gs = new genericstack<String>();\n        gs.push(\"Hello\");\n        System.out.println(gs.pop());\n    }\n}\n",
    "code_language": "JAVA",
    "explanation": "The code defines a generic stack class genericstack that uses the java.util.Stack class. Within the Main class's main method, an instance of genericstack specific to the String type is created.The line gs.push(\"Hello\"); inserts the string \"Hello\" into the stack, and then System.out.println(gs.pop()); prints the value returned by the pop method. Therefore, the output of the code will be \"Hello\".",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following Java code snippet?",
    "question_key": 152,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "The snippet compiles and runs but does not print anything.",
    "w_options": "The snippet compiles, runs, and prints 0.\nThe snippet compiles, runs, and prints 1.\nThe snippet does not compile.",
    "options_content_type": "TEXT",
    "code_data": "class abc\n{\n    public static void main(String args[])\n    {\n        if(args.length>0)\n        System.out.println(args.length);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The Java code snippet compiles and runs successfully, but it won't print anything under the condition when no command-line arguments are provided. The code checks if any arguments are passed and prints the length of the arguments. If no arguments are given, it won't execute the print statement, resulting in no output.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of the following code snippet in Java?",
    "question_key": 153,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_LETSFINDCOURSE\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": 13,
    "w_options": "11\n12\n14",
    "options_content_type": "TEXT",
    "code_data": "int a = 5;\r\nint b = 7;\r\nint c = a++ + ++b;\r\nSystem.out.println(c);",
    "code_language": "JAVA",
    "explanation": "In this code, a is initalized to 5. variable b is initialized to 7. In c variable, a is post increamented and b is pre incremented. when a is post increamented the value of a is 5 but in memory it is 6. ++b means b is increamented to 8 so the value of a is 5 and b is 8 . So sum of a and b is 13.",
    "explanation_content_type": "MARKDOWN"
  }
]