[
	{
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following code?\r",
    "question_key": 53,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": 1,
    "w_options": "Compilation error\nUndefined behavior due to the order of evaluation can be different. \n0",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n        public static void main(String[] args) {\n                int x = 4, y = 0;\n                int z;\n                z = (y++ + y);\n                System.out.printf(\"%d%n\", z);\n        }\n}",
    "code_language": "JAVA",
    "explanation": "The output will be 1 because the code uses post-increment (y++), so it first uses the current value of  y, which is 0, and then increments y by 1. Therefore, z is assigned the value of  0 + 1 , which is 1, and that's what gets printed.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following pseudocode for n = 2?",
    "question_key": 54,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_MEDIUM\nIN_OFFLINE_EXAM",
    "c_options": 16,
    "w_options": "2\n8\n4",
    "options_content_type": "TEXT",
    "code_data": "int fun( int n )\nif( n EQUALS 4 )\nreturn n\nelse\nreturn 2 * fun ( n + 1)",
    "code_language": "JAVA",
    "explanation": "In this code, n is assigned a value of 2. When we enter the fun() method, it will first check if n is equal to 4 or not. In our case, n is 2, so the if block will not execute. It will directly jump to the else block. In the else block, 2 * fun(n+1) i.e., fun(3) is calling itself again. Now the value of n becomes 3, and it will check the if block. Since the if condition does not match, it will directly go to the else block. In the else block, fun(4) is calling itself again. Now n is 4 and the if condition is satisfied, so it will return 4. But previously, it entered the else block twice, so the output becomes 2 * 2 * 4 = 16. Hence, the output is 16.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following pseudocode?\r",
    "question_key": 55,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": 7,
    "w_options": "12\n5\n6",
    "options_content_type": "TEXT",
    "code_data": "int i = 5,j = 7\nif (i + j > 5)\n   j= i + 2\n   if (j < 5 )\n      print i\n   else\n      print j\nelse\n   print i + 1",
    "code_language": "JAVA",
    "explanation": "The pseudocode has two nested if-else statements. The first one checks if the sum of i and j is greater than 5. Since i is 5 and j is 7, this condition is true, so the code inside the first if block is executed. This assigns j a new value of i + 2, which is 7. The second if-else statement checks if j is less than 5. Since j is 7, this condition is false, so the code inside the second else block is executed. This prints the value of j, which is 7. Therefore, the output of the pseudocode is 7.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Consider the following pseudo-code",
    "question_key": 56,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": "rocket is a class with rocket1 and rocket2 as its objects. height and weight are attributes of a rocket.",
    "w_options": "rocket is a class with rocket1 and rocket2 as its attributes. height and weight are objects of the class rocket.\nrocket is a class with rocket1, rocket2, height and weight as its objects.\nrocket is a class with rocket1, rocket2, height and weight as its attributes.",
    "options_content_type": "TEXT",
    "code_data": "class rocket{\nprivate Integer height, weight\n  function input( int a, int b){\n     height = a;\n     weight = b;\n  }\n}\nfunction main(){\n   rocket rocket1, rocket2\n}",
    "code_language": "JAVA",
    "explanation": "In the pseudo-code, rocket is a class that has two private attributes: height and weight. These attributes represent the common properties of all rockets, such as their height and weight. The class also has a function called input that takes two parameters: a and b. This function assigns the values of a and b to the height and weight attributes of the object that calls it. In the main function, rocket1 and rocket2 are declared as objects of the class rocket. This means that they have their own values for the height and weight attributes, and they can use the input function to set or change those values.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Shalini wants to program to print the largest number out of three inputted numbers. She writes the following program:",
    "question_key": 57,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": "number3 > temp",
    "w_options": "number3 > number2\nnumber3 < temp\nnumber3 > number1",
    "options_content_type": "TEXT",
    "code_data": "int number1, number 2, number3, temp;\ninput number1, number2, number3;\nif (number1>number2)\ntemp = number1\nelse\ntemp = number2\nend if\nif (??) // Statement 1\ntemp = number3\nend if\nprint temp\n\nFill in the ?? in Statement 1\n",
    "code_language": "JAVA",
    "explanation": "To find the largest number among three inputted numbers in Shalini's program, the condition in Statement 1 should be \"number3 > temp.\" This ensures that if `number3` is greater than the current value stored in `temp`, it will replace the current value, making `temp` hold the largest number. The program then prints the value of `temp`, which will be the largest among the inputted numbers.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Consider the following code:\r",
    "question_key": 58,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_MEDIUM\nIN_OFFLINE_EXAM",
    "c_options": "5 3",
    "w_options": "11 5\n10 5\n6 5",
    "options_content_type": "TEXT",
    "code_data": "class calculate {\n    public static void main(String[] args) {\n        int a = 5, b = 10, c;\n        c = modify(a, b);\n        System.out.print(a);\n        System.out.print(\" \");\n        System.out.println(c);\n    }\n\n    public static int modify(int y, int z) {\n        y = y + 1;\n        z = 2 + 1;\n        return y - z;\n    }\n}\n\nAssume that a and b were passed by value. What will be the output on executing \nfunction calculate()?",
    "code_language": "JAVA",
    "explanation": "Initially, `a` is assigned the value 5, and `b` is set to 10. Internally, the variable `c` calls the `modify()` method. Within the `modify` method, the values 5 and 10 are passed as arguments and received as `y` and `z`, respectively. `y` is then incremented to `y + 1`, resulting in a new value of 6, while `z` is set to `2 + 1`, making it 3. Subsequently, the `modify()` method returns the result of `y - z`, which calculates to `6 - 3`, yielding 3. This result is assigned to `c` in the `main` method. Consequently, the value of `a` remains at 5, and `c` is set to 3.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Smriti wants to make a program to print the sum of square of the first 5 whole numbers (0...4). She writes the following program:",
    "question_key": 59,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": "No error, the program is correct.",
    "w_options": "Statement 1\nStatement 4\nstatement 6",
    "options_content_type": "TEXT",
    "code_data": "        int i = 0; // statement 1\n        int sum = 0; // statement 2\n        while (i < 5) { // statement 3\n            sum += i * i; // statement 4\n            i = i + 1; // statement 5\n        }\n        print sum,; // statement 6\n\nIs her program correct? If not, which statement will you modify to correct it?",
    "code_language": "JAVA",
    "explanation": "This program will not throw any error.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following pseudo-code statements?\r",
    "question_key": 60,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": 411,
    "w_options": "410\n410.4\n411.4",
    "options_content_type": "TEXT",
    "code_data": "integer a=456, b, c, d =10\nb = a/d\nc=a-b\nprint c",
    "code_language": "JAVA",
    "explanation": "In the given pseudo-code:\r\nSmriti initializes four variables: a is set to 456, and b, c, and d are declared, with d assigned a value of 10.\r\nShe calculates b by performing integer division, dividing the value of a (456) by the value of d (10), which results in b being assigned the value 45.\r\nNext, she calculates c by subtracting the value of b (45) from the value of a (456), resulting in c being assigned the value 411.\r\nFinally, the program prints the value of c, which is indeed 411. So, the correct output is \"411.\"",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Pooja has written the following code to print numbers from 0 to n in reverse order using the recursive approach. Find if there exists any error in the given code.\r",
    "question_key": 61,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_MEDIUM\nIN_OFFLINE_EXAM",
    "c_options": "There is no error",
    "w_options": "Statement 1\nStatement 2\nStatement 3",
    "options_content_type": "TEXT",
    "code_data": "public static void printMe(int n) { // Statement 1\n        if (n < 1) {\n            return; // Statement 2\n        }\n        System.out.println(n); // Statement 3\n        printMe(n - 1); // Statement 4\n }",
    "code_language": "JAVA",
    "explanation": "The provided Java code is error-free. It uses recursion to print numbers from `n` down to 1 in reverse order. The code consists of a method with a base case to stop the recursion when `n` is less than 1 and a recursive call to print numbers in reverse order.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Consider the following pseudo-code\r",
    "question_key": 62,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_MEDIUM\nIN_OFFLINE_EXAM",
    "c_options": "Statement 3",
    "w_options": "Statement 1\nStatement 2\nNo Error",
    "options_content_type": "TEXT",
    "code_data": "class brush {\n    private int size,colorCode;\n\n    public void getData() {} // Statement 1\n    \n    public int name; // Statement 2\n\n    public void putData() {}\n   \n    public static void main(String[] args) {\n            brush b1, b2 = null;\n        b2.getData(); // Statement 3\n    }\n}\n\nDeleting which line will correct the error in the code?",
    "code_language": "JAVA",
    "explanation": "The error occurs in Statement 3, specifically in the line: b2.getData(); The error here is that you are attempting to call the getData method on the b2 object, but b2 is initialized to null and has not been properly instantiated with an object of the brush class. This will result in a NullPointerException at runtime.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Comment about the output of the following two statements:\r",
    "question_key": 63,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": "Differ by 80",
    "w_options": "Same\nDiffer by 50\nDiffer by 160",
    "options_content_type": "TEXT",
    "code_data": "integer a = 40, b = 35, c = 20, d = 10\nprint a * b/c-d\nprint a * b / (c-d)",
    "code_language": "JAVA",
    "explanation": "In the first statement, a * b/c-d results in 60, while in the second statement, a * b / (c-d) also evaluates to 140. The difference between these two results is 80 (140 - 60), so the correct output is \"Differ by 80.\"",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Saloni writes the code for a function that takes as input n, an even integer and calculates the sum of first n even natural numbers.\n",
    "question_key": 64,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_MEDIUM\nIN_OFFLINE_EXAM",
    "c_options": 30,
    "w_options": "1\n15\n16",
    "options_content_type": "TEXT",
    "code_data": "public static int sum(int n) {\n        if (n == 2) {\n            return 2;\n        } else {\n            return n + sum(n - 2);\n        }\n }\nShe then calls the function by the statement, sum(30). How many times will the function sum be called to compute this sum?",
    "code_language": "JAVA",
    "explanation": "In this code the sum(30) calls sum(30 - 2), which is sum(28). sum(28) calls sum(28 - 2), which is sum(26). This continues until sum(2), which returns 2. Then, the recursion unwinds, and each function call returns its value, which gets added up. So, there will be 15 function calls in total to compute the sum of the first 30 even natural numbers.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Shrishti writes the code for a function that computes the factorial of the inputted number n.\r",
    "question_key": 65,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": "return n*factorial(n-1)",
    "w_options": "return factorial (n-1)\nreturn n*factorial(n)\nreturn n* (n-1)\n",
    "options_content_type": "TEXT",
    "code_data": "public static int factorial(int n) {\r\n        if (n == 1) {\r\n            return 1;\r\n        } else {\r\n            // Missing Statement (recursive call)\r\n        }\r\n}",
    "code_language": "JAVA",
    "explanation": "The statement n*factorial(n-1) multiplies n by the factorial of (n - 1), which is the correct way to calculate the factorial recursively.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of the below pseudocode?",
    "question_key": 66,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": "The code on line 11 will always execute",
    "w_options": "The code on line 11 will run if line 5 executes successfully. \nThe code on line 11 will run if line 7 throws an exception.\nThe code on line 11 will run if line 9 throws an exception.",
    "options_content_type": "TEXT",
    "code_data": "05. //some code here\n06. try{\n07.  //some code here -1\n08. }catch(SomeException se){\n09.   //some code here -2\n10. } finally{\n11.   //some code here -3\n12. }",
    "code_language": "JAVA",
    "explanation": "In this code, if an exception occurs within the try block, the catch block will handle the exception, and the finally block will always execute whether an exception occurs or not.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Tanuj writes the code for a function that takes as input n and calculates the sum of first n natural numbers.",
    "question_key": 67,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": "n equals 1",
    "w_options": "n equals 2\nn >= 1\nn > 1",
    "options_content_type": "TEXT",
    "code_data": "public static int sum(int n) {\n        if (??) {\n            return 1;\n        } else {\n            return n + sum(n - 1);\n        }\n}\nFill in ?? in the code.\r\n",
    "code_language": "JAVA",
    "explanation": "The base case in the code should be \"n equals 1\" because when n reaches 1, the function returns 1, correctly capturing the sum of the first natural number. For other values of n, it recursively calculates the sum of the first n natural numbers by adding n to the sum of the first (n-1) natural numbers. This makes the code work correctly for computing the sum of the first n natural numbers.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "If f(a,b) is called, what is returned?\r",
    "question_key": 68,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_MEDIUM\nIN_OFFLINE_EXAM",
    "c_options": "-1 if a > b, 1 if a < b, 0 otherwise",
    "w_options": "Always +1\n1 if a > b, -1 if a < b, 0 otherwise\nif a equals b, -1 otherwise",
    "options_content_type": "TEXT",
    "code_data": "public static int g(int n) {\n        if (n > 0) {\n            return 1;\n        } else {\n            return -1;\n        }\n}\n\npublic static int f(int a, int b) {\n    if (a > b) {\n        return g(a - b);\n    } else if (a < b) {\n        return g(-b + a);\n    } else {\n        return 0;\n    }\n }",
    "code_language": "JAVA",
    "explanation": "The f(a, b) function determines the relationship between two integers a and b. It returns -1 if a is greater than b, 1 if a is less than b, and 0 if a and b are equal. So output is  -1 if a > b, 1 if a < b, 0 otherwise.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Given the following class, what will be the correct method of starting this thread, if the instance name is h?",
    "question_key": 69,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_MEDIUM\nIN_OFFLINE_EXAM",
    "c_options": "h.start()",
    "w_options": "h.run()\nh.newInstance()\nh.begin()",
    "options_content_type": "TEXT",
    "code_data": "public class Hello extends Thread {\n        public void run(){\n               System.out.println(\"Hello from a thread!\");\n        }\n}",
    "code_language": "JAVA",
    "explanation": "In Java, to start a thread, you use the `start()` method. So, `h.start()` is the correct way to begin the execution of a thread represented by the instance `h`.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which one of the following will be the output ?\r",
    "question_key": 70,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Runtime Error",
    "w_options": "3 1\n3 3\n4 1",
    "options_content_type": "TEXT",
    "code_data": "public class JavaCollection {\n        public static void main(String[] args) {\n                Vector<Double> dv = new Vector<Double>();\n                for (double i = 1; i < 5; i++) {\n                        dv.addElement(i);\n                        System.out.println(dv.elementAt(3));\n                }\n        }\n}",
    "code_language": "JAVA",
    "explanation": "In the code, when i reaches a value greater than or equal to 4, the line System.out.println(dv.elementAt(3)); will throw an ArrayIndexOutOfBoundsException because there is no element at index 3 in the Vector when it contains fewer than 4 elements.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which one of the following will be the output ?\r",
    "question_key": 71,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": "The above code demonstrates the concept of overriding.",
    "w_options": "The above code demonstrates the concept of overloading.\nThe above code demonstrates the concept of abstract classes. \nThe above code demonstrates the concept of Interfaces",
    "options_content_type": "TEXT",
    "code_data": "class A{\n  int i=0;\n  void doSomething(int k){\n    i=k;\n  }\n}\nclass B extends A{\n  int j=0;\n  void doSomething(int k){\n    j=10;\n    i=2*k;\n  }\n}",
    "code_language": "JAVA",
    "explanation": "In the code, there are two classes, A and B. Class B extends class A, indicating inheritance. Both classes have a method named doSomething. In class B, the doSomething method overrides the method in class A. Method overriding is a concept in object-oriented programming where a subclass provides a specific implementation of a method that is already defined in its superclass. In this case, class B provides a specialized implementation of the doSomething method, which is a clear example of method overriding.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Given the following code, how many threads can access code written at Point 2 concurrently? \r\n",
    "question_key": 72,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_MEDIUM\nIN_OFFLINE_EXAM",
    "c_options": "Only one",
    "w_options": "Any number of threads\n2 Threads\n No thread can access",
    "options_content_type": "TEXT",
    "code_data": "class CopyMachine (\n   public synchronized void makeCopies(Document d, int nCopies) {\n     //Point 1\n   }\n   public void loadPaper() {\n     //Point 2\n       synchronized(this) {\n         //Point 3\n       }\n   }      \n}",
    "code_language": "JAVA",
    "explanation": "In the given code, only one thread can access the code at \"Point 2\" concurrently. This is because the `loadPaper` method contains a synchronized block that locks on the same instance (`this`) as the `makeCopies` method. When one thread enters the synchronized block at \"Point 2,\" it acquires the lock, preventing other threads from accessing the synchronized code in the `makeCopies` method until the lock is released.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of the below code?\r",
    "question_key": 73,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": " prints [A, B, C, D, E, F]",
    "w_options": "option: type casting error\nRuntime error\nexception",
    "options_content_type": "TEXT",
    "code_data": "import java.util.TreeSet;\nclass Demo {\n        public static void main(String args[]) {\n                TreeSet ts = new TreeSet();\n                ts.add(\"C\");\n                ts.add(\"A\");\n                ts.add(\"B\");\n                ts.add(\"E\");\n                ts.add(\"F\");\n                ts.add(\"D\");\n                System.out.println(ts);\n\n        }\n}",
    "code_language": "JAVA",
    "explanation": "The TreeSet in Java sorts elements in ascending order by default. In this code, the elements \"C\", \"A\", \"B\", \"E\", \"F\", and \"D\" are added to the TreeSet. When you print the TreeSet, it will display the elements sorted in ascending order.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of the below code?\r",
    "question_key": 74,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": 20,
    "w_options": "13\n29\n24",
    "options_content_type": "TEXT",
    "code_data": "       Integer a, b, c;\n        a = 3;\n        b = 4;\n        c = 5;\n        if ((c + b + a) < (b + a - c)) {\n            c = (c + 1) + b;\n            \n            if ((c + b) < (a - c)) {\n                c = a + c;\n            }\n        } else {\n            c = b + a;\n        }\n        \n        c = 10 + a;\n        \n       print a+b+c",
    "code_language": "JAVA",
    "explanation": "Variables a, b, and c are initialized with values 3, 4, and 5, respectively. The code checks if (c + b + a) < (b + a - c), which evaluates to 12 < 2, and this condition is false. Therefore, it proceeds to the else block and assigns c the value of b + a, which is 7. Finally, c is updated to 10 + a, which is 13. The code then prints the sum of a, b, and c, which is 3 + 4 + 13, resulting in the output 20.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the below code?",
    "question_key": 75,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": "Positive Number",
    "w_options": "Negative Number\nZero\nNone of the given options",
    "options_content_type": "TEXT",
    "code_data": "int num = 10;\n        if (num > 0) {\n            System.out.println(\"Positive number\");\n        } else if (num == 0) {\n            System.out.println(\"Zero\");\n        } else {\n            System.out.println(\"Negative number\");\n        }",
    "code_language": "JAVA",
    "explanation": "The code initializes the variable num with the value 10. It enters an if statement and checks if num is greater than 0. Since 10 is indeed greater than 0, it prints \"Positive number.\" The else if and else blocks are not executed because the first condition (num > 0) is met, and in such cases, the other conditions are not checked. So, the output is \"Positive Number\" because the value of num is greater than 0.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following pseudo code?\r",
    "question_key": 76,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_MEDIUM\nIN_OFFLINE_EXAM",
    "c_options": 38,
    "w_options": "37\n56\n39",
    "options_content_type": "TEXT",
    "code_data": "Integer a,b,c\nSet a=6, b=5, c=10\nif((c+a) <b && (b+c) <a)\na=(a+c)+a\nif((b+c-a)<(8+b))\nb=(6+9)+c\nEnd if\nb=(b+b)+b\nEnd if\nb=(a+c)+a\nPrint a+b+c",
    "code_language": "JAVA",
    "explanation": "Initially, a, b, and c are assigned the values 6, 5, and 10, respectively.The first if condition is checked, but it evaluates to false because (c + a) is 16, which is not less than b, and (b + c) is 15, which is not less than a. Therefore, the code inside this if block is not executed. Now value of a is 6,b is 22  and c is 10. now sum is 38",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following pseudo code?",
    "question_key": 77,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_EASY\nIN_OFFLINE_EXAM",
    "c_options": 12,
    "w_options": "-2\n25\n18",
    "options_content_type": "TEXT",
    "code_data": "Integer a,b,c\nSet a=2, b=8, c=7\nc=(5+6)+c\nc=7&a\nPrint a+b+c",
    "code_language": "JAVA",
    "explanation": "Initially, a, b, and c are set to 2, 8, and 7 respectively. Then, c is updated to 11 by adding (5 + 6) to its current value. Subsequently, c undergoes a bitwise AND operation with a, resulting in 2. Finally, the code prints the sum of a, b, and c, which equals 12.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following pseudo code?",
    "question_key": 78,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": 36,
    "w_options": "42\n31\n39",
    "options_content_type": "TEXT",
    "code_data": "Integer p,q,r\nSet p=5, q=2, r=7\nq=p+q\nfor (each r from 2 to 5)\nq=(r+6)^r\np=8+q\nEnd for\nfor (each r from 2 to 4 )\nq=p+p\nq=q&p\nEnd for\np= (p+r)+r\nPrint p+q",
    "code_language": "JAVA",
    "explanation": "Initialize three integers: p is set to 5, q is set to 2, and r is set to 7. Update q by adding p and q, making q equal to 5 + 2, which is 7. Enter the first for loop, where r iterates from 2 to 5. In this loop, q is updated using (r+6)^r for each value of r. This results in a sequence of q values: 8, 49, 1000, 16807. Update p by adding 8 to the current value of q, making p equal to 8 + 16807, which is 16815. Enter the second for loop, where r iterates from 2 to 4. In this loop, q is updated by performing bitwise AND (q&q) with the current value of p. Finally, update p by adding the current value of p and the current value of r, making p equal to 16815 + 4, which is 16819. Print the sum of p and q, which is 16819 + 7, resulting in the output 36. So, the correct output is indeed 36.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following pseudo code?\r",
    "question_key": 79,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": 117,
    "w_options": "113\n118\n130",
    "options_content_type": "TEXT",
    "code_data": "Integer p,q,r\nSet p=9, q=8, r=8\nr=(6+8)+r\nif((5+6) <p)\np=6+r\nif((8+r+q)<(r+q+8))\nr=p+r\nif((p+r)<(q+p)) \np=(p+7)+r\nEnd if\nr=q+p\nEnd if\nElse\nq=(p+r)+r\nEnd if\nr=(r+11)+r\nPrint p+q+r",
    "code_language": "JAVA",
    "explanation": "Three integer variables, p, q, and r are initialized with values (p = 9, q = 8, and r = 8). r is updated by adding (6 + 8) to its current value, making r equal to 22.The code enters an if block, where p is updated to 28.In the else block of the first if, q is updated to 36. r is updated by adding (r + 11) to its current value, resulting in r being assigned the value 33.The program prints the sum of p, q, and r, which is 28 + 36 + 33, yielding the output 117.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will be the output of the following pseudocode for a=7, b=8, c=8?",
    "question_key": 80,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_GENERAL_CODING_ANALYSIS\nSOURCE_GFG\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": 51,
    "w_options": "60\n49\n56",
    "options_content_type": "TEXT",
    "code_data": "Integer funn (Integer a, Integer b, Integer c)\nb=(8&2)+a \nif((9&b)<c)\na=(c+7)+c\nc=c&b\nEnd if\nb=(4+1)+a\nreturn a+b+c",
    "code_language": "JAVA",
    "explanation": "Initially, b is calculated as (8 & 2) + a, which is (2) + 7, resulting in b being assigned the value 9. The if condition checks if (9 & b) is less than c. In this case, (9 & 9) is 9, and since 9 is not less than 8, the if block is not executed. After that, b is calculated as (4 + 1) + a, which is 5 + 7, resulting in b being assigned the value 12. Finally, the program returns the sum of a, b, and c, which is 7 + 12 + 8, resulting in the output  51.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Given the following definitions, which of these expressions will NOT evaluate to true?",
    "question_key": 81,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "i2 && b1",
    "w_options": "(i1 | i2) == 3\nb1 || !b2\n(i1 ^ i2) < 4",
    "options_content_type": "TEXT",
    "code_data": "boolean b1 = true, b2 = false;\nint i1 = 1, i2 = 2;",
    "code_language": "JAVA",
    "explanation": "i2 && b1 are not allowed between int and boolean.",
    "explanation_content_type": "MARKDOWN",
    "Reference Link": "https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/blob/main/java/java-quiz.md"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 82,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "It will not compile because of line 4.",
    "w_options": "It will not compile because of line 3.\n123\n1234",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n   public static void main (String[] args) {\n       int array[] = {1, 2, 3, 4};\n       for (int i = 0; i < array.size(); i++) {\n          System.out.print(array[i]);\n       }\n     }\n   }",
    "code_language": "JAVA",
    "explanation": "array.size() is invalid, to get the size or length of the array array.length can be used.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which of the following can replace the CODE SNIPPET to make the code below print \"Hello World\"?",
    "question_key": 83,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": " Interface1.print(); Interface2.print();",
    "w_options": "super1.print(); super2.print();\nthis.print();\nsuper.print();",
    "options_content_type": "TEXT",
    "code_data": "interface Interface1 {\n    static void print() {\n        System.out.print(\"Hello\");\n    }\n}\n\ninterface Interface2 {\n    static void print() {\n        System.out.print(\"World!\");\n    }\n}",
    "code_language": "JAVA",
    "explanation": "To achieve the code to print \"Hello World,\" you would call the static print() methods within Interface1 and Interface2 directly by invoking Interface1.print(); followed by Interface2.print();. This will respectively print \"Hello\" and \"World!\" separately.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What does the following code print?",
    "question_key": 84,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "abcde",
    "w_options": "CD\nCDE\nD",
    "options_content_type": "TEXT",
    "code_data": "String str = \"abcde\";\nstr.trim();\nstr.toUpperCase();\nstr.substring(3, 4);\nSystem.out.println(str);",
    "code_language": "JAVA",
    "explanation": "You should assign the result of trim back to the String variable. Otherwise, it is not going to work, because strings in Java are immutable.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the result of this code?",
    "question_key": 85,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "\"java.lang.Exception\"",
    "w_options": "It will run and throw an exception.\nIt will not compile.\nIt will show a stack trace with a runtime exception.",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n    public static void main (String[] args){\n        System.out.println(print(1));\n    }\n    static Exception print(int i){\n        if (i>0) {\n            return new Exception();\n        } else {\n            throw new RuntimeException();\n        }\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The Exception class is the root class for the entire exception hierarchy in Java. In our code, there's a call to the print() method, passing the value 1 as an argument. Before entering the print() method, it evaluates a condition (in this case, 1 > 0). As the condition is true, the if block executes and throws an exception. The console will display a thrown exception specifically identified as java.lang.Exception.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 86,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "truetrue",
    "w_options": "The code does not compile.\ntruefalse\nfalsetrue",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n    public static void main (String[] args) {\n        List list = new ArrayList();\n        list.add(\"hello\");\n        list.add(2);\n        System.out.print(list.get(0) instanceof Object);\n        System.out.print(list.get(1) instanceof Integer);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The `instanceof` keyword is used to determine if an object belongs to a particular class or its parent class. It returns a boolean value, 'true' if the object belongs to the class or parent class, otherwise 'false'. In this code, an ArrayList is created and two objects are stored: a String object \"hello\" at index 0 and an Integer object 2 at index 1. 'hello' at index 0 returns 'true' as it belongs to an object class. Index 1 with an Integer object returns 'true' as well, as it belongs to the integer.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Given the following two classes, what will be the output of the Main class?",
    "question_key": 87,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "\"123\"",
    "w_options": "Lines 1 and 2 generate compiler errors due to class name conflicts.\n\"-123\"\nIt will throw an exception on line 5.",
    "options_content_type": "TEXT",
    "code_data": "package mypackage;\npublic class Math {\n    public static int abs(int num){\n        return num < 0 ? -num : num;\n    }\n}\npackage mypackage.elementary;\npublic class Math {\n    public static int abs (int num) {\n        return -num;\n    }\n}\n\nimport mypackage.Math;\nimport mypackage.elementary.*;\n\nclass Main {\n    public static void main (String args[]){\n        System.out.println(Math.abs(123));\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The reason is that the import statements in the code explicitly resolve the class to use. Despite the class name conflict between Math in the mypackage and mypackage.elementary packages, the import statements clarify which Math class to utilize, and the code successfully prints the absolute value of 123 using the Math.abs() method from the mypackage class.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the result of this code?",
    "question_key": 88,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": " It will not compile because of line 10.",
    "w_options": "\"Hello!\"\nIt will not compile because of line 2.\n\"World!\"",
    "options_content_type": "TEXT",
    "code_data": "1: class MainClass {\n2:     final String message() {\n3:         return \"Hello!\";\n4:     }\n5: }\n\n6: class Main extends MainClass {\n7:     public static void main(String[] args) {\n8:         System.out.println(message());\n9:     }\n\n10:     String message() {\n11:         return \"World!\";\n12:     }\n13: }",
    "code_language": "JAVA",
    "explanation": "Compilation error at line 10 because of final methods cannot be overridden, and here message() is a final method, and also note that Non-static method message() cannot be referenced from a static context.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 89,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Nothing - this will not compile.",
    "w_options": "a negative integer value\n12345100000\n123451234512345",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n    public static void main(String[] args){\n        int a = 123451234512345;\n        System.out.println(a);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The int type in Java can be used to represent any whole number from -2147483648 to 2147483647. Therefore, this code will not compile as the number assigned to 'a' is larger than the int type can hold.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 90,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "A runtime exception is thrown.",
    "w_options": "world!!world\nworld!world!\nThe code does not compile.",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n    public static void main (String[] args) {\n        String message = \"Hello world!\";\n        String newMessage = message.substring(6, 12)\n            + message.substring(12, 6);\n        System.out.println(newMessage);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The code will result in a runtime exception being thrown. The substring indices are inverted (12 before 6) in the code, causing an `StringIndexOutOfBoundsException` since the indices are out of bounds for the given string \"Hello world!\".",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What does this code print?",
    "question_key": 91,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "negative number",
    "w_options": "0\npositive number\ncompilation error",
    "options_content_type": "TEXT",
    "code_data": "System.out.print(\"apple\".compareTo(\"banana\"));",
    "code_language": "JAVA",
    "explanation": "Comparable is an interface utilized for comparing two objects. It serves as a functional interface, featuring a single method called 'compareTo.' This method is used to compare the current instance with the provided instance. It returns a positive number if the current object is greater than the given object, a negative number if the current object is lesser, and 0 if they are equal. In the `String` class, the Comparable interface is always implemented, allowing comparisons based on ASCII values. In our program, when comparing 'apple' to 'banana,' the ASCII value of 'a' is 97, and the ASCII value of 'b' is 98. Since 97 is less than 98, it returns a negative number.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "How many times will this code print \"Hello World!\"?",
    "question_key": 92,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "10 times",
    "w_options": "9 times\n5 times\ninfinite number of times",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n    public static void main(String[] args){\n        for (int i=0; i<10; i=i++){\n            i+=1;\n            System.out.println(\"Hello World!\");\n        }\n    }\n}",
    "code_language": "JAVA",
    "explanation": "Observe the loop increment. It's not an increment, it's an assignment(post).",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What code would you use in Constructor A to call Constructor B?",
    "question_key": 93,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "this(name, species, false)",
    "w_options": "Jedi(name, species, false)\nnew Jedi(name, species, false)\nsuper(name, species, false)",
    "options_content_type": "TEXT",
    "code_data": "public class Jedi {\n  /* Constructor A */\n  Jedi(String name, String species){}\n\n  /* Constructor B */\n  Jedi(String name, String species, boolean followsTheDarkSide){}\n}",
    "code_language": "JAVA",
    "explanation": "this() is used to call the constructor of another constructor of same class.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What will this program print out to the console when executed?",
    "question_key": 94,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "[5, 1, 10]",
    "w_options": "[10, 5, 1]\n[1, 5, 10]\n[10, 1, 5]",
    "options_content_type": "TEXT",
    "code_data": "import java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args){\n        LinkedList<Integer> list = new LinkedList<>();\n        list.add(5);\n        list.add(1);\n        list.add(10);\n        System.out.println(list);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "LinkedList typically maintains elements in the order they are inserted. In this code, we insert the values 5, 1, and 10, and as a result, the output will display them in the same order: 5, 1, 10.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 95,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "A runtime exception is thrown.",
    "w_options": "Hello\nThe code does not compile.\nello",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n    public static void main(String[] args){\n       String message = \"Hello\";\n       for (int i = 0; i<message.length(); i++){\n          System.out.print(message.charAt(i+1));\n       }\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The code will throw a runtime exception. This occurs because the `charAt` method tries to access an index outside the string's bounds when `i` reaches the last character. This leads to an `IndexOutOfBoundsException` because `i+1` goes beyond the string's length.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 96,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "3true",
    "w_options": "A runtime exception is thrown.\n3false\n2true",
    "options_content_type": "TEXT",
    "code_data": "import java.util.*;\nclass Main {\n    public static void main(String[] args) {\n        List<Boolean> list = new ArrayList<>();\n        list.add(true);\n        list.add(Boolean.parseBoolean(\"FalSe\"));\n        list.add(Boolean.TRUE);\n        System.out.print(list.size());\n        System.out.print(list.get(1) instanceof Boolean);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The output is \"3true\" because the code creates a list with three Boolean values, where the second element is parsed from the string \"FalSe\" and the last element is Boolean.TRUE, and it prints the list's size and checks if the element at index 1 is an instance of Boolean (which is true).",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the result of this code?",
    "question_key": 97,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Hello!World!",
    "w_options": "It will not compile because of line 7.\nHello!Hello!\nIt will not compile because of line 11.",
    "options_content_type": "TEXT",
    "code_data": "1: class Main {\n2:     Object message() {\n3:         return \"Hello!\";\n4:     }\n5:     public static void main(String[] args) {\n6:         System.out.print(new Main().message());\n7:         System.out.print(new Main2().message());\n8:     }\n9: }\n10: class Main2 extends Main {\n11:     String message() {\n12:         return \"World!\";\n13:     }\n14: }",
    "code_language": "JAVA",
    "explanation": "In Java, when a subclass overrides a method from its superclass, the method in the subclass is called. In this code, the message method in Main2 (subclass) overrides the message method in Main (superclass), and it returns \"World!\" when called. Therefore, \"Hello!\" is printed from the message method in Main, and \"Hello!\" is printed again from the message method in Main2.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Which letters will print when this code is run?",
    "question_key": 98,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "A and D",
    "w_options": "A, B, and D\nA, C, and D\nC and D",
    "options_content_type": "TEXT",
    "code_data": "public static void main(String[] args) {\n    try {\n        System.out.println(\"A\");\n        badMethod();\n        System.out.println(\"B\");\n    } catch (Exception ex) {\n        System.out.println(\"C\");\n    } finally {\n        System.out.println(\"D\");\n    }\n}\npublic static void badMethod() {\n    throw new Error();\n}",
    "code_language": "JAVA",
    "explanation": "The program starts executing the main method, and it prints \"A.\" Then, it calls badMethod(), which throws an Error. This error is not caught by the catch block, but it's still handled by the finally block, which prints \"D\". In the output A and D will be displayed.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 99,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": " It will print \"Hello World!\" three times.",
    "w_options": "It will throw a runtime exception.\n It will not compile.\n It will run forever.",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n    static int count = 0;\n    public static void main(String[] args) {\n        if (count < 3) {\n            count++;\n            main(null);\n        } else {\n            return;\n        }\n        System.out.println(\"Hello World!\");\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The code uses recursion to call the main method three times, incrementing count with each call until count reaches 3. After the third call, it stops the recursive calls and prints \"Hello World!\" each time before the recursive call returns.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 100,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "[0, 10, 2, abc]",
    "w_options": "[abc, 0, 2, 10]\nThe code does not compile.\n[abc, 2, 10, 0]",
    "options_content_type": "TEXT",
    "code_data": "import java.util.*;\nclass Main {\n    public static void main(String[] args) {\n        String[] array = {\"abc\", \"2\", \"10\", \"0\"};\n        List<String> list = Arrays.asList(array);\n        Collections.sort(list);\n        System.out.println(Arrays.toString(array));\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The java.util.Arrays.asList(T... a) returns a fixed-size list backed by the specified array. (Changes to the returned list \"write through\" to the array.)",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the output of this code?",
    "question_key": 101,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "HelloHelloWorld!",
    "w_options": "Hello World!\nHello Hello World!\nHello HelloWorld!",
    "options_content_type": "TEXT",
    "code_data": "class Main {\n    public static void main(String[] args) {\n        String message = \"Hello\";\n        print(message);\n        message += \"World!\";\n        print(message);\n    }\n    static void print(String message) {\n        System.out.print(message);\n        message += \" \";\n    }\n}",
    "code_language": "JAVA",
    "explanation": "In the given Java code, the method print is invoked twice. The method prints the message but appends a space to the local copy of the string, which doesn't affect the original string outside the method. Therefore, the output shows \"Hello\" and \"HelloWorld!\" after the message variable gets concatenated with \"World!\".",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is displayed when this code is compiled and executed?",
    "question_key": 102,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": 10,
    "w_options": "x\nnull\n5",
    "options_content_type": "TEXT",
    "code_data": "public class Main {\n    public static void main(String[] args) {\n        int x = 5;\n        x = 10;\n        System.out.println(x);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "In this code snippet, x is initialized to 5 and in the next line x is again re-assign to 10. So the output is 10.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the result of this code?",
    "question_key": 103,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "a positive number",
    "w_options": "an alphanumeric character\na negative number\na ClassCasteException",
    "options_content_type": "TEXT",
    "code_data": "char smooch = 'x';\nSystem.out.println((int) smooch);",
    "code_language": "JAVA",
    "explanation": "Converting smaller data type to larger data type is known as widening. in this code, we are convertng char to int. When we are trying to convert a char to int then it will consider ASCII value of the respective character. Hence it returns a positive number.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "How would you fix this code so that it compiles?",
    "question_key": 104,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "Make age static.",
    "w_options": "Make age global.\nMake age public.\nInitialize age to a number.",
    "options_content_type": "TEXT",
    "code_data": "public class Nosey {\n    int age;\n    public static void main(String[] args) {\n        System.out.println(\"Your age is: \" + age);\n    }\n}",
    "code_language": "JAVA",
    "explanation": "Accessing non-static data members inside a static method causes a compile-time error since non-static variables cannot be accessed through a static context. In this code, the variable age is non-static. Since the `main` method is static and accesses `age` inside a static method, a compilation error will be encountered. To resolve this error, declare `age` as a `static int` variable.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "How many times f will be printed?",
    "question_key": 105,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": 4,
    "w_options": "3\n5\nA Runtime exception will be thrown",
    "options_content_type": "TEXT",
    "code_data": "public class Solution {\n    public static void main(String[] args) {\n        for (int i = 44; i > 40; i--) {\n            System.out.println(\"f\");\n        }\n    }\n}",
    "code_language": "JAVA",
    "explanation": "The letter 'f' will be printed 4 times in the given Java code because the `for` loop iterates while `i` is greater than 40, and `i` decreases from 44 to 41, resulting in 4 iterations.",
    "explanation_content_type": "MARKDOWN"
  }
  ,
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the result of this code?",
    "question_key": 106,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "It will throw an ArithmeticException.",
    "w_options": "It will run and output 0.\nIt will not compile because of line 3.\nIt will run and output infinity.",
    "options_content_type": "TEXT",
    "code_data": "  1: int a = 1;\n  2: int b = 0;\n  3: int c = a/b;\n  4: System.out.println(c);",
    "code_language": "JAVA",
    "explanation": "In mathematics, dividing by zero results in infinity, while in the world of Java, dividing by zero will throw an ArithmeticException.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "Use the magic power to cast a spell",
    "question_key": 107,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "new MagicPower().castSpell(\"expecto patronum\");",
    "w_options": "MagicPower magicPower = new MagicPower(); magicPower.castSpell();\nMagicPower.castSpell(\"expelliarmus\");\nnew MagicPower.castSpell();",
    "options_content_type": "TEXT",
    "code_data": "public class MagicPower {\n    void castSpell(String spell) {}\n}",
    "code_language": "JAVA",
    "explanation": "To use the magical casting ability encapsulated in the `castSpell` method, it's essential to instantiate an object of the `MagicPower` class. Since non-static methods are invoked through object references, following the creation of the object, we can invoke the `castSpell` method by passing \"expecto patronum\" as an argument to execute the desired spell.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What does this code print?",
    "question_key": 108,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "5 10",
    "w_options": "10 10\n10 5\n5 5",
    "options_content_type": "TEXT",
    "code_data": "public static void main(String[] args) {\n    int x=5,y=10;\n    swapsies(x,y);\n    System.out.println(x+\" \"+y);\n}\n\nstatic void swapsies(int a, int b) {\n    int temp=a;\n    a=b;\n    b=temp;\n}",
    "code_language": "JAVA",
    "explanation": "The values of x and y are initially set to 5 and 10. The swapsies function is called, which swaps the values of a and b, but it doesn't affect the original x and y variables because Java passes arguments by value. After the function call, x and y remain unchanged, so they are printed as 5 10.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What is the result of this code?",
    "question_key": 109,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "It will not compile because the second catch statement is unreachable",
    "w_options": "Hello World\nHello World!\nIt will throw a runtime exception",
    "options_content_type": "TEXT",
    "code_data": "try {\n    System.out.println(\"Hello World\");\n} catch (Exception e) {\n    System.out.println(\"e\");\n} catch (ArithmeticException e) {\n    System.out.println(\"e\");\n} finally {\n    System.out.println(\"!\");\n}",
    "code_language": "JAVA",
    "explanation": "In a try-catch-finally block, catch statements should be ordered from the most specific exception type to the most general. In the provided code, the catch for Exception is more general than the catch for ArithmeticException. So, the code will not compile because the catch for ArithmeticException is unreachable due to the catch for Exception catching exceptions of its type and all its subtypes.",
    "explanation_content_type": "MARKDOWN"
  },
  {
    "question_type": "CODE_ANALYSIS_MULTIPLE_CHOICE",
    "question_text": "What method should be added to the Duck class to print the name Moby?",
    "question_key": 110,
    "content_type": "HTML",
    "multimedia_count": 0,
    "tag_names": "POOL_1\nTOPIC_JAVA_CODING_ANALYSIS\nSOURCE_LINKEDIN\nDIFFICULTY_HARD\nIN_OFFLINE_EXAM",
    "c_options": "public String toString() { return name; } ",
    "w_options": "public void println() { System.out.println(name); } \nString toString() { return this.name; } \npublic void toString() { System.out.println(this.name); } ",
    "options_content_type": "TEXT",
    "code_data": "public class Duck {\n    private String name;\n\n    Duck(String name) {\n        this.name = name;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(new Duck(\"Moby\"));\n    }\n}",
    "code_language": "JAVA",
    "explanation": "In Java, when printing an object reference, it internally calls toString() method to obtain a string representation of that object. It is recommended to override the toString() method to ensure the desired output is generated. In this specific code, the toString() method within the Duck class needs to be overridden to return the name of the duck (\"Moby\"). This ensures that when printing the object reference, it correctly displays the name \"Moby\".",
    "explanation_content_type": "MARKDOWN"
  }
]